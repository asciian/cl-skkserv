#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp (ql:quickload '(:cl-skkserv :usocket :usocket-server :daemon) :silent t)
  )

(defpackage :ros.script.cl-skkserv.3723019386
  (:use :cl))
(in-package :ros.script.cl-skkserv.3723019386)

(defun serve ()
  (catch :exit
    (usocket:socket-server
     skkserv-user:*address*
     skkserv-user:*port*
     #'skkserv:process
     (list skkserv-user:*dictionary*
           skkserv-user:*encoding*)
     :element-type '(unsigned-byte 8))))

(defun main (&rest argv)
  (declare (ignorable argv))  
  ;; Initialization
  (let* ((home (user-homedir-pathname))
         (init (merge-pathnames #p".skkservrc" home)))
    (when (probe-file init)
      (load init)))
  (cond 
    ;; Start
    ((string= (first argv) "start")
     (daemon:daemonize :exit-parent t)
     (unwind-protect (serve) (daemon:exit)))
    ((string= (first argv) "debug") (serve))     
    ;; Stop
    ((string= (first argv) "stop")
     (usocket:with-client-socket (socket stream skkserv-user:*address* skkserv-user:*port*)
       (format stream "5")
       (force-output stream)))
    ;; Handle
    ((string= (first argv) "handle") 
     (multiple-value-bind (status response)
         (skkserv:handle (second argv) skkserv-user:*dictionary*)
       (format t "~a, ~a" status response)))))

;;; vim: set ft=lisp lisp:
